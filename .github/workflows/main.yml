name: Production Environment Workflow

on:
  push:
    branches: [ master ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 6.0.x
    - name: Restore dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build
    - name: Test
      run: dotnet test

    - name: SÃ¤tt versions-variabeln
      run: echo "RELEASE_VERSION=$(echo ${GIT_MESSAGE} | grep -Po '(?<=--version=)[^;]+')" >> $GITHUB_ENV
      env:
        GIT_MESSAGE: ${{github.event.head_commit.message}}
    - name: Test Release Variable
      run: echo $RELEASE_VERSION
    - name: Login to Docker
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    - name: Build Docker Image
      run: docker build -t johnalexanderberg/app:$RELEASE_VERSION
    - name: Push Docker Image
      run: docker push -t johnalexanderberg/app:$RELEASE_VERSION
    - name: Install Open VPN
      run: |
        sudo apt update
        sudo apt install -y openvpn openvpn-systemd-resolved
    - name: Connect to VPN
      id: connect_vpn
      uses: "kota65535/github-openvpn-connect-action@v1"
      with:
        config_file: ./.github/vpn/config.ovpn
        username:  ${{ secrets.OPEN_VPN_USER}}
        password: ${{ secrets.OPEN_VPN_PASSWORD }}
        client_key: ${{ secrets.OPEN_VPN_KEY }}
    - name: Check Connect VPN
      run: echo ${{ steps.connect_vpn.outputs.STATUS }}
    - name: executing remote ssh commands using ssh key
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        key: ${{ secrets.KEY }}
        port: ${{ secrets.PORT }}
        script: kubectl rollout restart deployment appdeployment
    - name: kill vpn
      if: always()
      run: sudo killall openvpn    
        # Run a single command using the runners shell
    - name: Run a one-line script
      run: echo Done!
